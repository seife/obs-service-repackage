#!/bin/bash
#
# service to repackage a binary rpm in the buildservice
# (C) 2019 Stefan Seyfried
#
# This is ugly. Don't do it.
#
# Permission to use, copy, modify, and/or distribute this software for
# any purpose with or without fee is hereby granted.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
# WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
# AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
# DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA
# OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
# TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.
#
# SPDX-License-Identifier: 0BSD
#
# usage:
# > tree service-test/
# service-test/
# +-- bad-proprietary-0.4.2-5.x86_64.rpm
# +-- repackage.specheader
# +-- _service
# > cd service-test
# > cat _service
# <services>
#   <service name="repackage"/>
# </services>
# > cat repackage.specheader
# BuildRequires:  python
# > osc service localrun
# > tree .
# .
# +-- bad-proprietary-0.4.2-5.x86_64.rpm
# +-- bad-propriatary.spec
# +-- repackage.specheader
# +-- _service
#
# "repackage.specheader" is prepended and can be used to specify BuildRequires:
# or Requires: lines for example.

MYOUTDIR="."
while test $# -gt 0; do
	case $1 in
		*-outdir)
			MYOUTDIR="$2"
			shift
		;;
		*)
			echo "Unknown parameter $1."
			echo "Usage: repackage --outdir \$OUT"
			exit 1
		;;
	esac
	shift
done

if [ ! -d "$MYOUTDIR" ]; then
	echo "ERROR: output directory does not exist"
	exit 1
fi

RPM=""
while IFS='' read -r LINE; do
	case "$LINE" in
		*.src.rpm)
			echo "source rpms not supported" >& 2
			exit 1
			;;
		*.rpm)
			if [ -n "$RPM" ]; then
				echo "only one rpm is supported" >& 2
				exit 1
			fi
			RPM="$LINE"
			;;
		repackage.specheader)
			SPECHEADER="$(cat repackage.specheader)"
			;;
		*)	;;
	esac
done < <(ls -1)

NAME=$(rpm -qp "$RPM" --queryformat='%{name}' 2>/dev/null)
CHANGES="$(rpm -qp "$RPM" --changelog 2>/dev/null)"

CFGFILES=()
while IFS='' read -r LINE; do
	CFGFILES+=( "%config $LINE" )
done < <(rpm -qlcp "$RPM" 2>/dev/null)

FILES=()
LASTGLOB=""
while IFS='' read -r LINE; do
	[ "$LINE" = "/*" ] && continue
	if [ -z "$LASTGLOB" ]; then
		LASTGLOB="$LINE"
		FILES+=( "$LINE" )
		continue
	fi
	[[ $LINE =~ $LASTGLOB ]] && continue
	LASTGLOB="$LINE"
	FILES+=( "$LINE" )
done < <(rpm -qlp "$RPM" 2>/dev/null | sed -E 's#(.*)/.*#\1/\*#'|uniq)
#done < <(rpm -qlp --noconfig "$RPM" 2>/dev/null | sed -E 's#(.*)/.*#\1/\*#'|uniq)
FILELIST=$( IFS=$'\n'; echo "${FILES[*]}" )
FILELIST_CFG=$( IFS=$'\n'; echo "${CFGFILES[*]}" )

SPEC="$MYOUTDIR/$NAME.spec"
rm -f "$SPEC"
cat > "$SPEC" << EOF
####
#### This spec file is automatically generated by obs-service-repackage
#### (https://github.com/seife/obs-service-repackage)
#### from ${RPM}
####
$SPECHEADER
#### repackage.specheader end
Source0:	${RPM#./}
EOF

rpm -qp "$RPM" --queryformat='
Name:		%{name}
Version:	%{version}
Release:	0
License:	%{license}
Url:		%{url}
Summary:	%{summary}

%%description
%{description}

' 2>/dev/null >> "$SPEC"
cat >> "$SPEC" << EOF

%prep

%build

%install
cd %buildroot
rpm2cpio %{SOURCE0} | cpio --extract --unconditional --preserve-modification-time --make-directories

%files
%defattr(-,root,root)
### FILELIST_CFG start
$FILELIST_CFG
### %%repackage_filelist_extra
%{?repackage_filelist_extra}
### FILELIST start
$FILELIST

%changelog
$CHANGES
EOF
